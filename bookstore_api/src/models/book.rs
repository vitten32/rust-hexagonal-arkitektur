/*
 * Books API
 *
 * API for managing books
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Book {
    /// Unique identifier for the book
    #[serde(rename = "id")]
    pub id: String,
    /// Title of the book
    #[serde(rename = "title")]
    pub title: String,
    /// Author of the book
    #[serde(rename = "author")]
    pub author: String,
    /// Date when the book was published
    #[serde(rename = "publishedDate", skip_serializing_if = "Option::is_none")]
    pub published_date: Option<String>,
    /// ISBN number of the book
    #[serde(rename = "isbn", skip_serializing_if = "Option::is_none")]
    pub isbn: Option<String>,
}

impl Book {
    pub fn new(id: String, title: String, author: String) -> Book {
        Book {
            id,
            title,
            author,
            published_date: None,
            isbn: None,
        }
    }
}

